name: Jans Auth Server CI/CD

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 8 * * *'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      project:
        description: 'Select the project to build'
        required: true
        default: 'jans-auth-server'
        type: choice
        options:
          - jans-auth-server
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      VERSION_NAME: main
      MAVEN_SKIP_TESTS: true
      PROFILE_NAME: ""
      CONTAINER_NAME: ""
      DEVELOPMENT_BUILD: ""
      CVSS_SCORE: ""
      SKIP_FINDBUGS: ""
      DEPENDENCY_CHECK: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Delete workspace before build
      run: rm -rf ${{ github.workspace }}/*

    - name: Set up Maven
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'maven'

    - name: Build jans-auth-server
      run: |
        mvn -f jans-auth-server/pom.xml -Dcfg=${{ env.PROFILE_NAME }} -Dmaven.test.skip=${{ env.MAVEN_SKIP_TESTS }} -Ddevelopment-build=${{ env.DEVELOPMENT_BUILD }} -Dcvss-score=${{ env.CVSS_SCORE }} -Dfindbugs.skip=${{ env.SKIP_FINDBUGS }} -Ddependency.check=${{ env.DEPENDENCY_CHECK }} -U -fae clean compile install javadoc:javadoc site

    - name: Archive results
      uses: actions/upload-artifact@v3
      with:
        name: build-results
        path: jans-auth-server/target

    - name: Send notification on failure
      if: failure()
      run: echo "Build failed"
