name: Jans Projects CI/CD

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:
    inputs:
      project:
        description: 'Select the project to build'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - jans-bom
          - jans-orm
          - jans-core
          - jans-lock
          - jans-agama
          - jans-auth-server
          - jans-link
          - jans-fido2
          - jans-scim
          - jans-keycloak-link
          - jans-config-appi
          - jans-keycloak
          - jans-casa

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      VERSION_NAME: main
      MAVEN_SKIP_TESTS: true
      PROFILE_NAME: ""
      CONTAINER_NAME: ""
      DEVELOPMENT_BUILD: ""
      CVSS_SCORE: ""
      SKIP_FINDBUGS: ""
      DEPENDENCY_CHECK: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
    
    - name: Delete workspace before build
      run: rm -rf ${{ github.workspace }}/*

    - name: Set up Maven
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'maven'

    - name: Prepare directories and profiles for build
      run: |
        if [[ "${{ github.event.inputs.build_all }}" == "true" || "${{ github.event.inputs.build_jans_agama }}" == "true" ]]; then
          # jans-agama specific setup
          echo "Setting up jans-agama"
        fi
        if [[ "${{ github.event.inputs.build_all }}" == "true" || "${{ github.event.inputs.build_jans_auth_server }}" == "true" ]]; then
          # jans-auth-server specific setup
          echo "Setting up jans-auth-server"

        fi

    - name: Build with Maven
      run: |
        if [[ "${{ github.event.inputs.build_all }}" == "true" || "${{ github.event.inputs.build_jans_agama }}" == "true" ]]; then
          mvn -f jans-agama/pom.xml -Dcfg=${{ env.PROFILE_NAME }} -Dmaven.test.skip=${{ env.MAVEN_SKIP_TESTS }} clean compile install
        fi
        if [[ "${{ github.event.inputs.build_all }}" == "true" || "${{ github.event.inputs.build_jans_auth_server }}" == "true" ]]; then
          mvn -f jans-agama/pom.xml -Dcfg=${{ env.PROFILE_NAME }} -Dmaven.test.skip=${{ env.MAVEN_SKIP_TESTS }} -Ddevelopment-build=${{ env.DEVELOPMENT_BUILD }} -Dcvss-score=${{ env.CVSS_SCORE }} -Dfindbugs.skip=${{ env.SKIP_FINDBUGS }} -Ddependency.check=${{ env.DEPENDENCY_CHECK }} -U -fae clean compile install javadoc:javadoc site
        fi
    