name: Jans Config API

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 8 * * *'

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      VERSION_NAME: main
      MAVEN_SKIP_TESTS: true
      PROFILE_NAME: ""
      CONTAINER_NAME: ""
      DEVELOPMENT_BUILD: ""
      TEST_CONF_IN_HOST: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
    
    - name: Delete workspace before build
      run: rm -rf ${{ github.workspace }}/*

    - name: Set up Maven
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'maven'

    - name: Setup profiles
      run: |
        echo "WORKSPACE = "$WORKSPACE
        echo "PROFILE_NAME = "${{ env.PROFILE_NAME }}
        echo "MAVEN_SKIP_TESTS = "${{ env.MAVEN_SKIP_TESTS }}
        echo "VERSION_NAME = "${{ env.VERSION_NAME }}
        echo "DEVELOPMENT_BUILD = "${{ env.DEVELOPMENT_BUILD }}
        echo "TEST_CONF_IN_HOST = "${{ env.TEST_CONF_IN_HOST }}
        echo "CONTAINER_NAME = "${{ env.CONTAINER_NAME }}
        cd jans-config-api
        pwd
        echo "---Start---"

        rm -rf ./profiles/${{ env.PROFILE_NAME }}

        if [[ ${{ env.MAVEN_SKIP_TESTS }} == "true" ]]; then
          echo "Configuring to use default profile in build without tests execution"

          cp -rf ./profiles/default ./profiles/${{ env.PROFILE_NAME }}
        else

          if [[ ${{ env.TEST_CONF_IN_HOST }} == "true" ]]; then
        echo "---1---"
            scp -r -P 22222 root@${{ env.PROFILE_NAME }}:/opt/jans/jans-setup/output/test/jans-config-api ./
            
          elif [[ ${{ env.PROFILE_NAME }} == "jenkins-config-api.gluu.org" ]]; then
        echo "---2---"
            scp -r -P 22222 root@${{ env.PROFILE_NAME }}:/var/lib/lxd/storage-pools/dir-pool/containers/${{ env.CONTAINER_NAME }}/rootfs/opt/jans/jans-setup/output/test/jans-config-api/ ./
            
          else
        echo "---3---"
            scp -r -P 22222 root@${{ env.PROFILE_NAME }}:/var/snap/lxd/common/lxd/storage-pools/default/containers/${{ env.CONTAINER_NAME }}/rootfs/opt/jans/jans-setup/output/test/jans-config-api ./
            ls -ltr ./jans-config-api/client/
          fi

          rm -rf ./profiles/${{ env.PROFILE_NAME }}

          mkdir -p ./profiles/${{ env.PROFILE_NAME }}
          ls -ltr ./profiles/${{ env.PROFILE_NAME }}
          ls -ltr ./profiles/default
          ls -ltr ./jans-config-api/client/
          
          cp ./jans-config-api/client/* ./profiles/${{ env.PROFILE_NAME }}
          cp ./profiles/default/config-build.properties ./profiles/${{ env.PROFILE_NAME }}
          ls -ltr ./profiles/${{ env.PROFILE_NAME }}

          rm -rf ./jans-config-api
          
          echo "---End---"
        fi

    - name: Build with Maven
      run: mvn -Dmaven.test.skip=${{ env.MAVEN_SKIP_TESTS }} -DfailIfNoTests=false -Dcfg=${{ env.PROFILE_NAME }} -Dtest=io.jans.configapi.JenkinsTestRunner clean compile install javadoc:javadoc site

    - name: Move javadocs to appropriate location
      run: |
        rm -rf ./server/profiles/${{ env.PROFILE_NAME }}

        echo "---Copying javadocs---"
        pwd
        cd jans-config-api
        pwd

        mkdir -p /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}

        rm -rf /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/shared/{apidocs,css,images} 
        rm -rf /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/common/{apidocs,css,images} 
        rm -rf /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/server/{apidocs,css,images} 
        rm -rf /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/admin-ui-plugin/{apidocs,css,images} 
        rm -rf /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/scim-plugin/{apidocs,css,images} 
        rm -rf /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/user-mgt-plugin/{apidocs,css,images} 

        mkdir -p /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/{shared,common,server,plugins/admin-ui-plugin,plugins/scim-plugin,plugins/user-mgt-plugin}

        cp -rv ./shared/target/site/apidocs/* /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/shared/
        cp -rv ./common/target/site/apidocs/* /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/common/
        cp -rv ./server/target/site/apidocs/* /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/server/
        cp -rv ./plugins/admin-ui-plugin/target/site/apidocs/* /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/plugins/admin-ui-plugin/
        cp -rv ./plugins/scim-plugin/target/site/apidocs/* /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/plugins/scim-plugin/
        cp -rv ./plugins/user-mgt-plugin/target/site/apidocs/* /var/www/html/javadocs/jans-config-api/${{ env.VERSION_NAME }}/plugins/user-mgt-plugin/

    - name: Execute build docker-image workflow
      env:
        GITGLUUTOKEN: ${{ secrets.GITGLUUTOKEN }}
      run: |
        curl --location --request POST 'https://api.github.com/repos/JanssenProject/jans-cloud-native/actions/workflows/15443035/dispatches' \
        --header 'Authorization: Bearer '${{ secrets.GITGLUUTOKEN }} \
        --header 'Content-Type: application/json' \
        --data '{"ref":"master", "inputs": { "services":"docker-jans-lock" }}'

    - name: Archive results
      uses: actions/upload-artifact@v3
      with:
        name: build-results
        path: target

    - name: Notify on failure
      if: failure()
      run: |
        curl -X POST -H 'Content-Type: application/json' -d '{"channel": "bot_reporter", "text": "Build ${{ github.run_id }} for job Build Jans Config API failed.\r"}' https://rocketchat-webhook-url
        
    - name: Notify on unstable
      if: always() && !success() && !failure()
      run: |
        curl -X POST -H 'Content-Type: application/json' -d '{"channel": "bot_reporter", "text": "Build ${{ github.run_id }} for job Build Jans Config API is unstable.\r"}' https://rocketchat-webhook-url
        
    - name: Notify on success
      if: success()
      run: |
        curl -X POST -H 'Content-Type: application/json' -d '{"channel": "bot_reporter", "text": "Build ${{ github.run_id }} for job Build Jans Config API finished successfully.\r"}' https://rocketchat-webhook-url


